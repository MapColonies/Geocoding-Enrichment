name: pull_request

on: [pull_request, workflow_dispatch]

jobs:
  eslint:
    name: Run eslint
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run linters
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ secrets.github_token }}
          # Enable linters
          eslint: true
          prettier: true
          eslint_extensions: ts

      - name: OpenAPI Lint Checks
        uses: nwestfall/openapi-action@v1.0.2
        with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
         file: ./openapi3.yaml

  integration-test:
      name: Run Integration Tests
      runs-on: ubuntu-latest
      container: node:16

      services:
        # Label used to access the service container
        elasticsearch:
          # Docker Hub image
          image: elasticsearch:8.13.0
          env:
            discovery.type: single-node
            xpack.security.enabled: false
            xpack.security.enrollment.enabled: false
            ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          ports:
            - 9200:9200
          # Set health checks to wait until elastic has started
          options: >-
            --health-cmd "curl -f http://localhost:9200/_cluster/health || exit 1"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

        # Kafka service
        kafka:
          image: confluentinc/cp-kafka:7.2.0
          env:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          ports:
            - 9092:9092
          options: >-
            --health-cmd "curl -f localhost:9092 || exit 1"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 10
    
        # Zookeeper service for Kafka
        zookeeper:
          image: confluentinc/cp-zookeeper:7.2.0
          env:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
          ports:
            - 2181:2181
          options: >-
            --health-cmd "echo ruok | nc localhost 2181 | grep imok || exit 1"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

            
      strategy:
        matrix:
          node: [18.x, 20.x]

      steps:
        - name: Check out Git repository
          uses: actions/checkout@v2

        - name: Set up Node.js
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node }}

        - name: Install Node.js dependencies
          run: npm ci

        - name: Wait for Elasticsearch
          run: |
            until curl -s http://elasticsearch:9200/_cluster/health | grep '"status":"green"'; do
              echo "Waiting for Elasticsearch...";
              sleep 5;
            done

        - name: Run integration tests
          run: npm run test:integration

        - uses: actions/upload-artifact@v4
          with:
            name: Integration Test Reporters (Node ${{ matrix.node }})
            path: reports/**
          
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build_image:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: build Docker image
        run: docker build -t test-build:latest .
